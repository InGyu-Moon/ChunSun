server:
  port: 0

spring:
  application:
    name: coupon-kafka-service

  cloud:
    config:
      uri: http://127.0.0.1:8888

  datasource:
    url: jdbc:mysql://127.0.0.1:3306/coupon?serverTimezone=UTC&characterEncoding=UTF-8
    username: chunsun
    password: chunsun
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    show-sql: true  # SQL 로그 출력 (디버깅용, 운영에서는 비활성화)

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
#    username: '{cipher}ac0d4fda7d75b7332ec46bdbc84c93ce47980011cf86d88e7e160b61b6a5d1c0'
#    password: '{cipher}ac0d4fda7d75b7332ec46bdbc84c93ce47980011cf86d88e7e160b61b6a5d1c0'
#    username: '{cipher}d79ddeb52eabe7f2a656753d8e65089861e6f273afb8aa2577aa08082cc0a118'
#    password: '{cipher}51552a12ded68918d03a41fecbf3afeeb213926916dc77125b08378a21a66d8e4ba5c9bf2d84603a7e08cc8f2061e91e'

  kafka:
    consumer:
      bootstrap-servers: kafka1:9092,kafka2:9092,kafka3:9092
      group-id: coupon-issue
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
      max-poll-records: 100
      enable-auto-commit: false
      properties:
        isolation.level: read_committed

    listener:
      type: batch
      poll-timeout: 100
      ack-mode: manual_immediate
      concurrency: 3

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh